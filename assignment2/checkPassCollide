#!/usr/bin/env python3

import csv
import sys
import time
import string

ALLOWABLECHARACTERS = set('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789')

def reversed(x):
    return x[::-1]

class Password:
    def __init__(self, data, next = None):
        self.data = data
        self.next = next

class LinkedList:
    def __init__(self):
        self.head = None
    def insert(self, password):
        newPassword = Password(password)
        if(self.head is None):
            self.head = newPassword
            return 0
        else:
            traverse = self.head
            while(traverse.next):
                traverse = traverse.next
            traverse.next = newPassword
            return 1
    def print(self):
        password = self.head
        while password is not None:
                print(password.data)
                password = password.next
    def checkMatch(self, toCheck):
        if(self.head is None):
            return False
        checkAgainst = self.head
        while(checkAgainst):
            if(checkAgainst.data == toCheck):
                return True
            if(reversed(checkAgainst.data) == toCheck):
                return True
            checkAgainst = checkAgainst.next
        return False

    def countCollisions(self):
        count = 0
        traverse = self.head
        while(traverse.next):
            count = count + 1
        return count
TABLESIZE = 800
def keyGen(password):
    sum = 0
    for character in str(password):
        sum += ord(character)

    return sum

def hash(password):
    a = 538106227
    r = 48
    w = len(password)*8
    key = ((a*keyGen(password))%(pow(2,w)))>>(w - r)
    return key%TABLESIZE

with open(sys.argv[1], "r") as file:
    passwords = file.readlines()
    file.close()
    hashTable = [LinkedList()]*TABLESIZE
    for i in range(0,TABLESIZE):
        hashTable[i] = LinkedList()
    collisions = 0
    for line in passwords:
        password = line.strip()
        key = hash(password)
        if(hashTable[key].insert(password) == 1):
            collisions += 1
    print(collisions)
    sys.exit()
   
